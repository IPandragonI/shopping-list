describe('Affichage initial', () => {
    beforeEach(() => {
        cy.visit('/index.html');
    });

    it('VÃ©rifier que les produits sont affichÃ©s dans #liste-produits', () => {
        cy.get('#liste-produits').children().should('have.length.greaterThan', 0);
    });

    it('VÃ©rifier que le nombre de produits est affichÃ© dans #compteur-produits', () => {
        cy.get('#liste-produits').children().then((products) => {
            const productCount = products.length;
            cy.get('#compteur-produits').should('contain', productCount);
        });
    });
});

describe('Recherche de produit', () => {
    beforeEach(() => {
        cy.visit('/index.html');
    });

    it('VÃ©rifier que la liste est filtrÃ©e en fonction du mot-clÃ© saisi', () => {
        cy.get('#recherche').type('Lait');
        cy.get('#liste-produits').children().should('have.length', 3);
    });

    it('Exemple : taper "Lait" doit rÃ©duire la liste Ã  3 produits', () => {
        cy.get('#recherche').type('Lait');
        cy.get('#liste-produits').children().should('have.length', 3);
        cy.get('#liste-produits').children().first().should('contain', 'Lait');
    });
});

describe('Tri des produits', () => {
    beforeEach(() => {
        cy.visit('/index.html');
    });

    it('Tester le tri par nom (ordre alphabÃ©tique)', () => {
        cy.get('#tri').select('nom');
        cy.get('#liste-produits').children().then((products) => {
            const productNames = [...products].map(product => product.querySelector('.product-name').textContent);
            const sortedNames = [...productNames].sort((a, b) => a.localeCompare(b));
            expect(productNames).to.deep.equal(sortedNames);
        });
    });

    it('Tester le tri par prix (ordre croissant)', () => {
        cy.get('#tri').select('prix');
        cy.get('#liste-produits').children().then((products) => {
            const productPrices = [...products].map(product => parseFloat(product.querySelector('.product-price').textContent));
            const sortedPrices = [...productPrices].sort((a, b) => a - b);
            expect(productPrices).to.deep.equal(sortedPrices);
        });
    });
});

describe('RÃ©initialisation des filtres', () => {
    beforeEach(() => {
        cy.visit('/index.html');
    });

    it('VÃ©rifier que le champ #recherche est vidÃ©', () => {
        cy.get('#recherche').type('Lait');
        cy.get('#reset-filtres').click();
        cy.get('#recherche').should('have.value', '');
    });

    it('VÃ©rifier que #tri revient Ã  son Ã©tat initial', () => {
        cy.get('#tri').select('prix');
        cy.get('#reset-filtres').click();
        cy.get('#tri').should('have.value', '');
    });

    it('VÃ©rifier que tous les produits sont de nouveau affichÃ©s', () => {
        cy.get('#recherche').type('Lait');
        cy.get('#reset-filtres').click();
        cy.get('#liste-produits').children().should('have.length.greaterThan', 0);
    });
});

describe('Ajout dâ€™un produit Ã  la liste', () => {
    beforeEach(() => {
        cy.visit('/index.html');
        cy.window().then((win) => {
            win.localStorage.clear();
        });
    });

    it('VÃ©rifier que le produit est bien ajoutÃ© au localStorage', () => {
        cy.get('#liste-produits').children().first().children().find('button').click();
        cy.window().then((win) => {
            const listeCourse = JSON.parse(win.localStorage.getItem('list'));
            expect(listeCourse).to.have.length.greaterThan(0);
        });
    });

    it('VÃ©rifier la structure des donnÃ©es ajoutÃ©es', () => {
        cy.get('#liste-produits').children().first().children().find('button').click();
        cy.window().then((win) => {
            const listeCourse = JSON.parse(win.localStorage.getItem('list'));
            const produit = listeCourse[listeCourse.length - 1];
            expect(produit).to.have.property('nom');
            expect(produit).to.have.property('prix_unitaire');
            expect(produit).to.have.property('quantite_stock');
        });
    });
});

describe('Navigation vers la liste de courses', () => {
    beforeEach(() => {
        cy.visit('/index.html');
        cy.window().then((win) => {
            win.localStorage.setItem('list', JSON.stringify([
                { nom: 'Produit 1', prix_unitaire: 10, quantite: 2 },
                { nom: 'Produit 2', prix_unitaire: 20, quantite: 3 }
            ]));
        });
        cy.get('#liste-course').click();
    });

    it('VÃ©rifier que les produits ajoutÃ©s sâ€™affichent dans le tableau #liste-course-body', () => {
        cy.get('#liste-course-body').children().should('have.length', 2);
        cy.get('#liste-course-body').children().first().should('contain', 'Produit 1');
        cy.get('#liste-course-body').children().last().should('contain', 'Produit 2');
    });

    it('VÃ©rifier que le total gÃ©nÃ©ral sâ€™affiche dans #total-general', () => {
        cy.get('#total-general').should('contain', 'ğŸ’° Total gÃ©nÃ©ral : 80.00 â‚¬');
    });
});

describe('Modification de la quantitÃ©', () => {
    beforeEach(() => {
        cy.visit('/index.html');
        cy.window().then((win) => {
            win.localStorage.setItem('list', JSON.stringify([
                { nom: 'Produit 1', prix_unitaire: 10, quantite: 2 },
                { nom: 'Produit 2', prix_unitaire: 20, quantite: 3 }
            ]));
        });
        cy.get('#liste-course').click();
    });

    it('VÃ©rifier que la quantitÃ© est modifiÃ©e', () => {
        cy.get('#liste-course-body').children().first().find('input[type="number"]').clear().type('5');
        cy.get('#liste-course-body').children().first().find('input[type="number"]').should('have.value', '5');
    });

    it('VÃ©rifier que le sous-total est mis Ã  jour', () => {
        cy.get('#liste-course-body').children().first().find('input[type="number"]').clear().type('5');
        cy.get('#liste-course-body').children().first().find('td').eq(3).should('contain', '50.00');
    });

    it('VÃ©rifier que le total gÃ©nÃ©ral est mis Ã  jour', () => {
        cy.get('#liste-course-body').children().first().find('input[type="number"]').clear().type('5');
        cy.get('#total-general').should('contain', 'ğŸ’° Total gÃ©nÃ©ral : 110.00 â‚¬');
    });
});

describe('Suppression dâ€™un produit', () => {
    beforeEach(() => {
        cy.visit('/index.html');
        cy.window().then((win) => {
            win.localStorage.setItem('list', JSON.stringify([
                { nom: 'Produit 1', prix_unitaire: 10, quantite: 2 },
                { nom: 'Produit 2', prix_unitaire: 20, quantite: 3 }
            ]));
        });
        cy.get('#liste-course').click();
    });

    it('VÃ©rifier que la ligne est supprimÃ©e', () => {
        cy.get('#liste-course-body').children().last().find('button').click();
        cy.get('#liste-course-body').children().should('have.length', 1);
    });

    it('VÃ©rifier que le localStorage est mis Ã  jour', () => {
        cy.get('#liste-course-body').children().last().find('button').click();
        cy.window().then((win) => {
            const listeCourse = JSON.parse(win.localStorage.getItem('list'));
            expect(listeCourse).to.have.length(1)
            expect(listeCourse[0].nom).to.equal('Produit 1');
        });
    });
});

describe('Vider la liste', () => {
    beforeEach(() => {
        cy.visit('/index.html');
        cy.window().then((win) => {
            win.localStorage.setItem('list', JSON.stringify([
                { nom: 'Produit 1', prix_unitaire: 10, quantite: 2 },
                { nom: 'Produit 2', prix_unitaire: 20, quantite: 3 }
            ]));
        });
        cy.get('#liste-course').click();
    });

    it('Simuler la confirmation et vÃ©rifier que toutes les lignes sont supprimÃ©es', () => {
        cy.get('#vider-liste').click();
        cy.on('window:confirm', () => true);
        cy.get('#liste-course-body').children().should('have.length', 0);
    });

    it('VÃ©rifier que total-general revient Ã  zÃ©ro', () => {
        cy.get('#vider-liste').click();
        cy.on('window:confirm', () => true);
        cy.get('#total-general').should('contain', 'ğŸ’° Total gÃ©nÃ©ral : 0 â‚¬');
    });
});
